<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hammerbrother的博客</title>
  
  <subtitle>欢迎一起交流进步</subtitle>
  <link href="https://hyperion1230.github.io/myblog.github.io/atom.xml" rel="self"/>
  
  <link href="https://hyperion1230.github.io/myblog.github.io/"/>
  <updated>2025-09-20T03:47:22.887Z</updated>
  <id>https://hyperion1230.github.io/myblog.github.io/</id>
  
  <author>
    <name>Hammerbrother</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>单细胞scRNA-seq分析思路总结</title>
    <link href="https://hyperion1230.github.io/myblog.github.io/posts/%E5%8D%95%E7%BB%86%E8%83%9EscRNA-seq%E5%88%86%E6%9E%90%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/"/>
    <id>https://hyperion1230.github.io/myblog.github.io/posts/%E5%8D%95%E7%BB%86%E8%83%9EscRNA-seq%E5%88%86%E6%9E%90%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/</id>
    <published>2025-09-19T11:09:47.000Z</published>
    <updated>2025-09-20T03:47:22.887Z</updated>
    
    <content type="html"><![CDATA[<p><strong>单细胞分析思路</strong>，把常见的步骤和逻辑框架讲清楚。这里主要以 <strong>单细胞转录组（scRNA-seq）</strong> 为例。</p><hr /><h1 id="具体流程"><a class="markdownIt-Anchor" href="#具体流程"></a> 具体流程</h1><h2 id="数据准备与质控-qc"><a class="markdownIt-Anchor" href="#数据准备与质控-qc"></a> <strong>数据准备与质控 (QC)</strong></h2><ul><li><strong>输入</strong>：原始 UMI/reads 矩阵（细胞 × 基因）。</li><li><strong>目标</strong>：筛掉低质量细胞，保证分析结果可靠。</li><li><strong>常见 QC 指标</strong>：<ul><li>每个细胞的总 reads/UMI 数（低了可能是坏细胞，高了可能是双细胞 doublet）。</li><li>检测到的基因数。</li><li>线粒体基因比例（过高说明细胞可能坏死）。</li></ul></li><li><strong>操作</strong>：<ul><li><code>subset</code>、<code>filter</code> 去掉异常细胞。</li><li><code>DoubletFinder</code> / <code>Scrublet</code> 识别双细胞。</li></ul></li></ul><div class="collapse-box-control">    <div class="collapse-box-header"><div class="collapse-box-icon"><i class="fa fa-plus"></i></div><span>具体方法</span></div>    <div class="collapse-box-content"><div class="inner">        <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#TODO</span></span><br></pre></td></tr></table></figure>     </div></div>    </div><hr /><h2 id="标准化与特征选择"><a class="markdownIt-Anchor" href="#标准化与特征选择"></a> <strong>标准化与特征选择</strong></h2><ul><li><strong>归一化 (Normalize)</strong>：<ul><li>LogNormalize：每个细胞的 counts 除以总数 × scale.factor，再 log1p。</li></ul></li></ul><div class="panel panel-info">    <div class="panel-title"><i class="fa fa-info"></i>标准化意义</div>    <div class="panel-body">        <p><strong>消除文库大小差异</strong></p><ul><li>每个细胞的表达量变成“相对表达”，能直接比较不同细胞。</li></ul><p><strong>突出生物差异</strong></p><ul><li>高表达的基因被 log 压缩，不至于主导后续分析；</li><li>中低表达的差异会更明显，利于发现 marker 基因。</li></ul><p><strong>为下游分析提供可比性输入</strong></p><ul><li>PCA、聚类、UMAP 等方法都需要输入可比较的数值矩阵。</li><li>LogNormalize 后的矩阵能让算法真正捕捉生物学差异，而不是技术噪音。</li></ul>    </div>    </div><p><strong>高变基因选择 (FindVariableFeatures)</strong>：</p><ul><li>找出在细胞间变异度最高的一批基因（常用 2000）。</li></ul><div class="collapse-box-control">    <div class="collapse-box-header"><div class="collapse-box-icon"><i class="fa fa-plus"></i></div><span>具体方法</span></div>    <div class="collapse-box-content"><div class="inner">        <p>🔬 Seurat 内置的三种方法</p><p>在 <code>FindVariableFeatures()</code> 里可以设置 <code>selection.method</code>：</p><ol><li><code>&quot;vst&quot;</code>（Variance Stabilizing Transformation）👉 默认、推荐</li></ol><ul><li><p><strong>思路</strong>：</p><ul><li>对每个基因，在所有细胞里的表达做方差估计；</li><li>把方差和均值之间的关系建模（负二项分布近似）；</li><li>计算残差方差（observed variance / expected variance）。</li></ul></li><li><p><strong>特点</strong>：</p><ul><li>在去除了均值依赖性后，能稳健地挑出高变基因；</li><li>对高表达基因不会过度偏向；</li><li>推荐作为大多数 scRNA-seq 分析的标准方法。</li></ul><hr /><ol start="2"><li><code>&quot;mean.var.plot&quot;</code>（MVP，均值-方差图方法）</li></ol></li><li><p><strong>思路</strong>：</p><ul><li>把基因按均值分成 bins；</li><li>计算每个基因在 bin 内的 <code>z-score</code>（方差相对 bin 内基因的偏高程度）；</li><li>取方差最高的一批基因。</li></ul></li><li><p><strong>特点</strong>：</p><ul><li>方法简单直观，可以画图展示（Mean-Variance Plot）。</li><li>对噪音和批次效应敏感，不如 <code>vst</code> 稳健。</li></ul><hr /><ol start="3"><li><code>&quot;dispersion&quot;</code>（离散度方法）</li></ol></li><li><p><strong>思路</strong>：</p><ul><li>类似于 MVP，但直接用 <strong>标准化后的方差/均值比（dispersion）</strong> 来挑基因。</li></ul></li><li><p><strong>特点</strong>：</p><ul><li>速度快；</li><li>但容易偏向于低均值、相对离散度高的基因。</li></ul></li></ul>     </div></div>    </div><p><strong>缩放 (ScaleData)</strong>：</p><ul><li><code>Z-score</code> 标准化基因表达，用于 PCA 等。</li></ul><div class="collapse-box-control">    <div class="collapse-box-header"><div class="collapse-box-icon"><i class="fa fa-plus"></i></div><span>what is Z-score</span></div>    <div class="collapse-box-content"><div class="inner">        <p><strong>Z-score</strong>（标准分数、标准化值）是统计学里常用的一个指标，表示一个数值偏离平均值多少个标准差。</p><p>公式：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>z</mi><mo>=</mo><mfrac><mrow><mi>x</mi><mtext>−</mtext><mi>μ</mi></mrow><mi>σ</mi></mfrac></mrow><annotation encoding="application/x-tex">z=\frac{x−μ}{σ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.9463300000000001em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mord">−</span><span class="mord mathnormal">μ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><code>x</code>：某个观测值</p><p><code>μ</code>：总体/样本的平均值</p><p><code>σ</code>：总体/样本的标准差</p><hr /><p><strong>在单细胞分析里的应用</strong></p><ul><li>在 <strong>高变基因筛选（mean.var.plot 方法）</strong> 中，Seurat 会把基因按表达均值分成 bins：<ul><li>先算每个基因的方差；</li><li>再和同 bin 内的基因比较，用 <code>z-score</code> <strong>标准化</strong>，得到它在该均值水平下是否“比平均更离散”。</li></ul></li><li>高 <code>z-score</code> → 说明这个基因在同水平基因里“更变异”，可能是高变基因。</li></ul><blockquote><p><strong>z-score 就是“标准化的偏离程度”</strong>，告诉你一个值比均值高/低了多少个标准差。<br />在单细胞分析里，它常被用来比较基因在不同均值水平下的方差是否异常高，从而识别高变基因。</p></blockquote>     </div></div>    </div><hr /><h2 id="降维"><a class="markdownIt-Anchor" href="#降维"></a> <strong>降维</strong></h2><p><strong>线性降维 (PCA)</strong>：</p><ul><li>提取主要变异维度。</li></ul><p><strong>非线性降维 (UMAP/tSNE)</strong>：</p><ul><li>用于可视化，把高维数据投射到 2D/3D。</li></ul><div class="panel panel-info">    <div class="panel-title"><i class="fa fa-info"></i>undefined</div>    <div class="panel-body">        <p>对于单细胞RNA-seq而言，降维分析时先使用PCA提取变异的主成分这里有一些<span class="blur">可能是20？</span>，再对得到的降维数据进行UMPA聚类。</p>    </div>    </div><hr /><h2 id="邻居图构建与聚类"><a class="markdownIt-Anchor" href="#邻居图构建与聚类"></a> <strong>邻居图构建与聚类</strong></h2><ul><li><strong>FindNeighbors</strong>：构建 kNN 图或 SNN 图。</li></ul><p><div class="collapse-box-control">    <div class="collapse-box-header"><div class="collapse-box-icon"><i class="fa fa-plus"></i></div><span>What’s</span></div>    <div class="collapse-box-content"><div class="inner">        <br />&lt;内容&gt;</p>     </div></div>    </div><ul><li><strong>FindClusters</strong>：基于图的社区检测算法（Louvain/Leiden），得到细胞簇。</li><li><strong>意义</strong>：把表达相似的细胞归为一群。</li></ul><hr /><h2 id="细胞类型注释"><a class="markdownIt-Anchor" href="#细胞类型注释"></a> <strong>细胞类型注释</strong></h2><ul><li><strong>找 marker 基因 (FindAllMarkers)</strong>：每个 cluster 的特异表达基因。</li><li><strong>对照已知 marker</strong>：推断 cluster 对应的细胞类型。</li><li><strong>可选</strong>：用参考数据库或自动化工具（SingleR, CellTypist）。</li></ul><hr /><h2 id="下游分析"><a class="markdownIt-Anchor" href="#下游分析"></a> <strong>下游分析</strong></h2><p>根据研究问题不同，可能包括：</p><ul><li><strong>差异表达分析 (FindMarkers)</strong>：比较不同 cluster / 条件下的基因表达差异。</li><li><strong>轨迹推断 (pseudotime)</strong>：Monocle/Slingshot 分析发育或分化轨迹。</li><li><strong>细胞通讯 (CellChat, CellPhoneDB)</strong>：预测细胞间配体-受体相互作用。</li><li><strong>基因调控网络 (SCENIC, pySCENIC)</strong>：推断转录因子活性。</li><li><strong>多组学整合 (WNN, MOFA+, Seurat v5)</strong>：整合 RNA、ATAC、ADT 等。</li></ul><hr /><h2 id="可视化与验证"><a class="markdownIt-Anchor" href="#可视化与验证"></a> <strong>可视化与验证</strong></h2><ul><li>UMAP/tSNE 图上展示 cluster/marker 表达。</li><li>小提琴图、热图展示基因表达模式。</li><li>对关键结果做实验验证（qPCR, FISH, flow cytometry）。</li></ul><hr /><p><strong>单细胞分析思路</strong> = 质控 → 归一化 → 特征选择 → 降维 → 构图聚类 → 注释 → 下游分析（差异、轨迹、通讯等）。</p><p>它的核心是<strong>把高维 noisy 的单细胞数据，通过降维和聚类整理成有生物学意义的细胞群体，然后结合 marker/功能信息解读</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;单细胞分析思路&lt;/strong&gt;，把常见的步骤和逻辑框架讲清楚。这里主要以 &lt;strong&gt;单细胞转录组（scRNA-seq）&lt;/strong&gt; 为例。&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&quot;具体流程&quot;&gt;&lt;a class=&quot;markdownIt-Anchor</summary>
      
    
    
    
    
    <category term="单细胞" scheme="https://hyperion1230.github.io/myblog.github.io/tags/%E5%8D%95%E7%BB%86%E8%83%9E/"/>
    
    <category term="scRNA-seq" scheme="https://hyperion1230.github.io/myblog.github.io/tags/scRNA-seq/"/>
    
  </entry>
  
  <entry>
    <title>github 部署hexo静态博客</title>
    <link href="https://hyperion1230.github.io/myblog.github.io/posts/github-%E9%83%A8%E7%BD%B2hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    <id>https://hyperion1230.github.io/myblog.github.io/posts/github-%E9%83%A8%E7%BD%B2hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</id>
    <published>2025-09-19T07:22:56.000Z</published>
    <updated>2025-09-20T01:21:54.910Z</updated>
    
    <content type="html"><![CDATA[<h2 id="部署hexo到github"><a class="markdownIt-Anchor" href="#部署hexo到github"></a> 部署hexo到Github</h2><h3 id="一-创建github项目仓库"><a class="markdownIt-Anchor" href="#一-创建github项目仓库"></a> 一、创建github项目仓库</h3><p>在github页面创建一个自己的仓库，这个应该没啥问题</p><p><img src="152543.png" alt="image-20250919152645642" /></p><p>然后拉取远程仓库（我这边用的是kratos rebirth的模板，以下以此模板为例）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/kratos-rebirth/quickstart.git</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改完配置后用hexo进行部署</p><p><mark>注意</mark>：在部署的时候分支与修改格式内容的分支尽量重命名，以免后期发生git merge事件！！！</p><hr /><h3 id="二-之后就是hexo的部署"><a class="markdownIt-Anchor" href="#二-之后就是hexo的部署"></a> 二、之后就是hexo的部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>然后就完成部署了</p><hr /><h3 id="更新"><a class="markdownIt-Anchor" href="#更新"></a> 更新：</h3><p>尝试部署到cloudflare上，但是发现静态文件的路径不可用，部署上的网页无法渲染，遂修改静态资源路径，重新开设了一个分支cloudflare，但是后来发现要更新2次就放弃了。。。</p><hr /><p>真恶心，晚上用mac推送博文发现疯狂报错：</p><blockquote><p>Error: Spawn failed<br />at ChildProcess.<anonymous> (/Users/dasiweida/Blog/myblog.github.io/node_modules/hexo-deployer-git/no<br />de_modules/hexo-util/lib/spawn.js:51:21)<br />at ChildProcess.emit (node:events:508:28)<br />at ChildProcess._handle.onexit (node:internal/child_process:294:12)</p></blockquote><p>死活推送不到github</p><p>尝试了包括但不限于以下方法：</p><ol><li>重新删除<code>.deploy-git</code>文件：没用</li><li>修改整个目录权限：没用</li><li>最后终于给我找的了，原来是git push的缓冲区有限制！！！太坑了！</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --golbal http.postBuffer</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;部署hexo到github&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#部署hexo到github&quot;&gt;&lt;/a&gt; 部署hexo到Github&lt;/h2&gt;
&lt;h3 id=&quot;一-创建github项目仓库&quot;&gt;&lt;a class=&quot;markdown</summary>
      
    
    
    
    
    <category term="记录" scheme="https://hyperion1230.github.io/myblog.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
    <category term="hexo" scheme="https://hyperion1230.github.io/myblog.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>记录一下使用kratos模板创建个人博客</title>
    <link href="https://hyperion1230.github.io/myblog.github.io/posts/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E4%BD%BF%E7%94%A8kratos%E6%A8%A1%E6%9D%BF%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://hyperion1230.github.io/myblog.github.io/posts/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E4%BD%BF%E7%94%A8kratos%E6%A8%A1%E6%9D%BF%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2025-09-18T09:03:28.000Z</published>
    <updated>2025-09-22T01:08:45.754Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a914ea0a24bb97b18b174f5fa5331573b1946742a2dabcaa1899fd8c8c325768"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/myblog.github.io/lib/hbe.js"></script><link href="/myblog.github.io/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="new!" scheme="https://hyperion1230.github.io/myblog.github.io/categories/new/"/>
    
    
    <category term="记录" scheme="https://hyperion1230.github.io/myblog.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
    <category term="kratos" scheme="https://hyperion1230.github.io/myblog.github.io/tags/kratos/"/>
    
  </entry>
  
</feed>
